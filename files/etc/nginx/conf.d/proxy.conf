# Define our upstreams. This is fine given both of these sites are
# comprehensive Linux mirrors, but it probably needs to be grouped by distro so
# that the true upstream of each distro is also included.

upstream mirrors {
	server mirror.internode.on.net;
	server mirror.aarnet.edu.au backup;
}

# Initialize our proxy cache.

proxy_cache_path
	/var/cache/nginx
	levels=1:2
	keys_zone=one:30m
	inactive=90d
	max_size=2g;

proxy_cache one;
proxy_cache_revalidate on;

# Actually activate the on-disk cache. TODO what is the interaction between
# this and the "inactive" parameter above?

proxy_cache_valid 3h;

# Trim down the inputs to the proxy key hash. We want to ignore http vs https,
# which actual upstream server it was (we don't care; all mirrors are supposed
# to be the same).

proxy_cache_key "$request_uri";

proxy_next_upstream_timeout 3s;

proxy_cache_use_stale
	error
	timeout
	invalid_header
	updating;

proxy_next_upstream
	error
	timeout
	invalid_header
	http_404
	http_500
	http_502
	http_503
	http_504;

proxy_http_version 1.1;

add_header X-Cache-Status $upstream_cache_status;

server {
	listen 1999 default_server;
	server_name _;
	# root !invalid;

	location /epel/ {
		proxy_pass http://ftp.linux.cz/pub/linux/fedora/epel/;
	}
	location /rocky/ {
		proxy_pass https://ftp.linux.cz/pub/linux/rocky/;
	}
	location /centos/ {
		proxy_pass http://ftp.heanet.ie/mirrors/centos/;
	}
	location /centos-scl-tst/ {
		proxy_pass http://buildlogs.centos.org/centos/;
	}
	location /centos-scl-src/ {
		proxy_pass http://archive.kernel.org/centos-vault/centos/;
	}
	location /centos-scl-dbg/ {
		proxy_pass http://linuxsoft.cern.ch/centos-debuginfo/;
	}
	location /fedora/ {
		proxy_pass http://ftp.linux.cz/pub/linux/fedora/linux/;
	}
	location /debian/ {
		proxy_pass http://ftp.linux.cz/pub/linux/debian/;
	}
	location /ubuntu/ {
		proxy_pass http://ftp.linux.cz/pub/linux/ubuntu/;
	}
}

# and finally, because we're running in a Docker container, log to stdout/stderr.

log_format simple '$request_uri $request_method $status $body_bytes_sent $upstream_cache_status';

access_log /dev/stdout simple;
error_log /dev/stderr;

